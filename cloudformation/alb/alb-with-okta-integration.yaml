AWSTemplateFormatVersion: '2010-09-09'
Description: >
  ALB with Okta integration
Parameters:
  ALBScheme:
    Type: String
    Description: Select internal or internet-facing ALB
    AllowedValues:
      - "internal"
      - "internet-facing"
  ALBcertificate:
    Type: String
    Description: > 
      Select SSL Certificate ARN
      editorial-prod = arn:aws:acm:eu-west-1:307921801440, infra-prod = arn:aws:acm:eu-west-1:027104099916
    AllowedValues:
      - "arn:aws:acm:eu-west-1:307921801440:certificate/00b98d3d-2c61-4a52-a28c-5bbb79c04011"
      - "arn:aws:acm:eu-west-1:027104099916:certificate/ef3f86ce-cf66-41df-810d-2a9ad2b654bb"
  SecurityGroupIds:
    Type: List<AWS::EC2::SecurityGroup::Id>
    Description: Specify the security group(s) for the load balancer
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Subnets to attach load balancer
  VpcId:
    Type: String
    Description: Select VPC. vpc-729f2815 = editorial-prod, vpc-f3534591 = infra-prod
    Default: vpc-729f2815
    AllowedValues:
      - vpc-729f2815
      - vpc-f3534591
  OktaEnvironment:
    Type: String
    Description: Select which okta environment you want the application load balancer to integrate with.
    Default: FtTest
    AllowedValues:
      - FtTest
      - FtProd
  TagDescription:
    Description: Tag detail for the Description
    Type: String
    Default: Load balancer for CMS integration cluster
  TagTeamDL:
    Description: Tag detail for the TeamDL
    ConstraintDescription: There must be a valid email address for the TeamDL Topic
    Type: String
    AllowedPattern: ^([a-zA-Z0-9_\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$
    Default: team.cms@ft.com
  TagSystemCode:
      Description: SystemCode
      Type: String
      Default: methode
  TagEnvironment:
    Description: Tag detail for the Environment
    Type: String
    Default: dev
    AllowedValues:
      - 't'
      - 'p'
      - 'dev'

  OktaOauthScopes:
    Type: String
    Description: Select OAuth scopes
    AllowedValues:
      - openid profile offline_access
      - openid profile offline_access email
      - openid profile offline_access groups
      - openid profile offline_access email groups

  OktaEnvironment:
    Type: String
    Description: Select which okta environment you want the application load balancer to integrate with.
    Default: FtTest
    AllowedValues:
      - FtTest
      - FtProd

  OktaSecretsManagerSecretName:
    Type: String
    Description: Specify the name of the secrets manager secret  that holds the client id and client secret keys.
    AllowedValues:
      - cms-integration-dev
      - cms-integration-test
      - cms-integration-prod
      - cms-fotoware-test

  OktaSecretsManagerClientIDSecretKey:
    Type: String
    Description: Specify the name of the secrets manager secret key that holds the client id value.
    Default: client_id

  OktaSecretsManagerClientSecretSecretKey:
    Type: String
    Description: Specify the name of the secrets manager secret key that holds the client secret value.
    Default: client_secret      
Mappings:
  EnvMap:
    t:
      env: "test"
    p:
      env: "prod"
    dev:
      env: "dev"
  Okta:
    Issuer:
      FtTest: https://ft-test.okta.com/oauth2/aus1kd29jg5LHxiFu357
      FtProd: https://ft.okta.com/oauth2/aus1kd9vpcssdNhdH357

Resources:
  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
     Name: !Sub "${AWS::StackName}"
     Type: application
     Scheme: !Ref ALBScheme
     Subnets: !Ref SubnetIds
     SecurityGroups: !Ref SecurityGroupIds
     Tags:
       -
         Key: Name
         Value: !Sub "${AWS::StackName}"
       -
         Key: Description
         Value:
           Ref: TagDescription
       -
         Key: environment
         Value:
           Ref: TagEnvironment
       - Key: teamDL
         Value:
           Ref: TagTeamDL
       - Key: systemCode
         Value:
           Ref: TagSystemCode
  TargetGroupClaro:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
     Name: !Sub
      - claro-${Env}
      - { Env: !FindInMap [ EnvMap, !Ref TagEnvironment, env ] }
     Port: 8080
     Protocol: HTTP
     HealthCheckPath: /claro/
     HealthCheckProtocol: HTTP
     HealthCheckIntervalSeconds: 10
     HealthCheckTimeoutSeconds: 5
     HealthyThresholdCount: 2
     UnhealthyThresholdCount: 2
     Matcher:
       HttpCode: '200'
     TargetGroupAttributes:
     - Key: deregistration_delay.timeout_seconds
       Value: '10'
     - Key: stickiness.enabled
       Value: true
     VpcId: !Ref VpcId
  TargetGroupFotoware:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
     Name: !Sub
      - fotoware-${Env}
      - { Env: !FindInMap [ EnvMap, !Ref TagEnvironment, env ] }
     Port: 80
     Protocol: HTTP
     HealthCheckPath: /fotoweb/views/login
     HealthCheckProtocol: HTTP
     HealthCheckIntervalSeconds: 10
     HealthCheckTimeoutSeconds: 5
     HealthyThresholdCount: 2
     UnhealthyThresholdCount: 2
     Matcher:
       HttpCode: '404'
     TargetGroupAttributes:
     - Key: deregistration_delay.timeout_seconds
       Value: '10'
     - Key: stickiness.enabled
       Value: true
     VpcId: !Ref VpcId     
  ListenerRuleFotoware:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: authenticate-oidc
          AuthenticateOidcConfig:
            AuthorizationEndpoint: !Join ["", [!FindInMap ["Okta", "Issuer", !Ref OktaEnvironment], /v1/authorize]]
            ClientId: !Join ["", ['{{resolve:secretsmanager:', !Ref OktaSecretsManagerSecretName, ':SecretString:', !Ref OktaSecretsManagerClientIDSecretKey, '}}']]
            ClientSecret: !Join ["", ['{{resolve:secretsmanager:', !Ref OktaSecretsManagerSecretName, ':SecretString:', !Ref OktaSecretsManagerClientSecretSecretKey, '}}']]
            Issuer: !FindInMap ["Okta", "Issuer", !Ref OktaEnvironment]
            OnUnauthenticatedRequest: authenticate
            Scope: !Ref OktaOauthScopes
            SessionCookieName: AWSELBAuthSessionCookie
            SessionTimeout: 43200
            TokenEndpoint: !Join ["", [!FindInMap ["Okta", "Issuer", !Ref OktaEnvironment], /v1/token]]
            UserInfoEndpoint: !Join ["", [!FindInMap ["Okta", "Issuer", !Ref OktaEnvironment], /v1/userinfo]]
          Order: 1
        - Type: forward
          TargetGroupArn: !Ref TargetGroupFotoware
          Order: 2
      Conditions:
      - Field: host-header
        Values: 
        - fotoware-test.ft.com
        - fotoware-standby.ft.com
        - fotoware.ft.com
      ListenerArn:
        Ref: ListenerHTTPS
      Priority: 20      
  ListenerHTTPS:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn:
        Ref: ApplicationLoadBalancer
      Port: 443
      Protocol: HTTPS
      Certificates:
        - CertificateArn: !Ref ALBcertificate
      DefaultActions:
        - Type: authenticate-oidc
          AuthenticateOidcConfig:
            AuthorizationEndpoint: !Join ["", [!FindInMap ["Okta", "Issuer", !Ref OktaEnvironment], /v1/authorize]]
            ClientId: !Join ["", ['{{resolve:secretsmanager:', !Ref OktaSecretsManagerSecretName, ':SecretString:', !Ref OktaSecretsManagerClientIDSecretKey, '}}']]
            ClientSecret: !Join ["", ['{{resolve:secretsmanager:', !Ref OktaSecretsManagerSecretName, ':SecretString:', !Ref OktaSecretsManagerClientSecretSecretKey, '}}']]
            Issuer: !FindInMap ["Okta", "Issuer", !Ref OktaEnvironment]
            OnUnauthenticatedRequest: authenticate
            Scope: !Ref OktaOauthScopes
            SessionCookieName: AWSELBAuthSessionCookie
            SessionTimeout: 43200
            TokenEndpoint: !Join ["", [!FindInMap ["Okta", "Issuer", !Ref OktaEnvironment], /v1/token]]
            UserInfoEndpoint: !Join ["", [!FindInMap ["Okta", "Issuer", !Ref OktaEnvironment], /v1/userinfo]]
          Order: 1
        - Type: forward
          TargetGroupArn: !Ref TargetGroupFotoware
          Order: 2
  ListenerHTTP:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn:
        Ref: ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: "redirect"
          RedirectConfig:
            Protocol: "HTTPS"
            Port: "443"
            Host: "#{host}"
            Path: "/#{path}"
            Query: "#{query}"
            StatusCode: "HTTP_301"         
Outputs:
  LoadBalancerDNSName:
    Description: Load Balancer DNS Name
    Value: !GetAtt ApplicationLoadBalancer.DNSName
